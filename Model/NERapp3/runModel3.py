#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Apr 28, 2021 02:08:02 PM CEST  platform: Windows NT

import sys
from PIL import Image, ImageTk

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import runModel3_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    runModel3_support.set_Tk_var()
    runModel3_support.set_Tk_var2()

    image1 = Image.open("IPK.png")
    image1 = image1.resize((201, 100), Image.ANTIALIAS)
    test = ImageTk.PhotoImage(image1)
    label1 = tk.Label(image=test)
    label1.image = test
    # Position image
    label1.place(relx=0, rely=0)

    image2 = Image.open("openNext.png")
    image2 = image2.resize((246, 160), Image.ANTIALIAS)
    test = ImageTk.PhotoImage(image2)
    label2 = tk.Label(image=test)
    label2.image = test
    # Position image
    label2.place(relx=0.59, rely=0.64)

    top = Toplevel1(root)
    runModel3_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    runModel3_support.set_Tk_var()
    top = Toplevel1 (w)
    runModel3_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x450+602+194")
        top.minsize(148, 1)
        top.maxsize(1924, 1030)
        top.resizable(1,  1)
        top.title("NER Application")
        top.configure(background="#2ca971")

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.05, rely=0.8, height=53, width=156)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(command=runModel3_support.urlButton)
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Run Model''')

        self.Button3 = tk.Button(top)
        self.Button3.place(relx=0.45, rely=0.35, height=53, width=136)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(command=runModel3_support.corpusButton)
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''Run Model''')

        self.Entry3 = tk.Entry(top)
        self.Entry3.place(relx=0.05, rely=0.675, height=54, relwidth=0.5)
        self.Entry3.configure(background="white")
        self.Entry3.configure(disabledforeground="#a3a3a3")
        self.Entry3.configure(font="TkFixedFont")
        self.Entry3.configure(foreground="#000000")
        self.Entry3.configure(insertbackground="black")
        self.Entry3.configure(textvariable=runModel3_support.urlLabel)

        self.Entry4 = tk.Entry(top)
        self.Entry4.place(relx=0.45, rely=0.225, height=54, relwidth=0.5)
        self.Entry4.configure(background="white")
        self.Entry4.configure(disabledforeground="#a3a3a3")
        self.Entry4.configure(font="TkFixedFont")
        self.Entry4.configure(foreground="#000000")
        self.Entry4.configure(insertbackground="black")
        self.Entry4.configure(textvariable=runModel3_support.corpusLabel)

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.45, rely=0.15, height=26, width=171)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Enter a corpus text below''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.05, rely=0.6, height=26, width=171)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Enter an appropedia url below''')

if __name__ == '__main__':
    vp_start_gui()





